{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Field","name","type","key","Object","classCallCheck","this","split","quote","startsWith","line","result","i","length","String","join","Table","keys","data","fields","field","push","includes","id","elt","t","map","getValue","_this","subset","arguments","undefined","forEach","generateInsert","TVShowMini","image","props","show","react_default","a","createElement","Col_default","sm","Image_default","src","medium","rounded","fluid","Row_default","children","Component","TVShow","Card_default","bg","text","Header","Title","Img","variant","Text","Body","dangerouslySetInnerHTML","__html","summary","TVShowSelected","_this2","Tab_default","Content","table","Pane","eventKey","toString","App_TVShow","TVShowList","_this3","list","ListGroup_default","Item","action","href","App_TVShowMini","Button_default","onClick","size","textButton","TVShowQuery","_this4","possibleConstructorReturn","getPrototypeOf","call","state","found","selection","textInput","React","createRef","serie","addField","personnage","personne","jouer","setKey","episode","handleSubmit","bind","assertThisInitialized","handleRemoveShow","handleAddShow","downloadSQLFile","event","_this5","query","current","value","fetch","then","json","add","setState","preventDefault","filter","_this6","cast","_embedded","person","character","personneId","personnageId","idSerie","idPersonnage","idPersonne","episodes","oldState","concat","generateCreateStatement","generateAllInsert","console","log","element","document","file","Blob","URL","createObjectURL","download","body","appendChild","click","Container","Navbar_default","Brand","logo","width","height","className","alt","Nav_default","Link","disabled","Form_default","inline","onSubmit","FormControl_default","placeholder","ref","autoFocus","style","marginTop","Badge_default","pill","App_TVShowList","App_TVShowSelected","App","App_TVShowQuery","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edf1f961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8f6daf1f.svg\";","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Tab from 'react-bootstrap/Tab'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Image from 'react-bootstrap/Image'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Field {\n  constructor(name,type,key){\n    this.name = name;\n    this.type = type;\n    this.key = key.split(\".\"); // handle inner properties s.a. \"image.medium\"\n    this.quote = !this.type.startsWith(\"int\") && !this.type.startsWith(\"dec\");\n  }\n\n  getValue(line){\n    let result = line;\n    for(let i= 0; i < this.key.length; ++i){\n        result = result[this.key[i]];\n        if (result === null || typeof result === 'undefined') return \"null\";\n    }\n\n    result = String(result);\n    result = result.split(\"\\\"\").join(\"\\\\\\\"\");\n    if (this.quote) return \"\\\"\"+result+\"\\\"\";\n    return result;\n  }\n}\n\nclass Table {\n  constructor(name){\n    this.keys = [];\n    this.name = name;\n    this.data = {};\n    this.fields = [];\n    this.key=\"`id`\";\n  }\n\n  addField(field){\n    this.fields.push(field);\n  }\n\n  setKey(key){\n    this.key = key;\n  }\n\n  add(data){\n    if (!this.keys.includes(data.id)) {\n      this.data[data.id]=data;\n      this.keys.push(data.id);\n    }\n  }\n\n\n  generateInsert(elt){\n    const t = this.fields.map((field)=>field.getValue(elt));\n    return \"INSERT INTO \"+this.name+\" VALUES (\"+t.join()+\");\\n\";\n  }\n\n  generateAllInsert(subset = null){\n    var result = \"\";\n    if (subset == null) subset = this.keys;\n    subset.forEach((key)=>{result += this.generateInsert(this.data[key])});\n    return result;\n  }\n\n  generateCreateStatement(){\n    var result = \"CREATE TABLE IF NOT EXISTS \"+this.name+\" (\\n\";\n    this.fields.forEach(field=>{\n      result += \"`\"+field.name+\"` \"+field.type+\",\\n\";\n    });\n    result += \"PRIMARY KEY (\"+this.key+\")\\n\";\n    result += \") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\\n\\n\";\n  return result;\n  }\n}\n\nclass TVShowMini extends Component {\n  render() {\n    const image = this.props.show.image ? (\n      <Col sm=\"4\">\n        <Image src={this.props.show.image.medium} rounded fluid />\n      </Col>\n    ) : (<Col sm=\"4\"></Col>);\n    return (\n      <Row>\n        {image}\n        <Col sm=\"8\">\n          <h4>{this.props.show.name}</h4>\n          {this.props.children}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass TVShow extends Component {\n  render() {\n    return (\n    <Card bg=\"secondary\" text=\"white\" >\n    <Card.Header><Card.Title>{this.props.show.name}</Card.Title></Card.Header>\n{this.props.show.image?    <Card.Img variant=\"top\" src={this.props.show.image.medium} />\n  : <Card.Text>Pas d image</Card.Text>\n}\n    <Card.Body>\n      <Card.Text dangerouslySetInnerHTML={{__html: this.props.show.summary}} />\n    </Card.Body>\n  </Card>\n  );\n  }\n}\nclass TVShowSelected extends Component {\n  render(){\n      return (\n      <Tab.Content>{this.props.table.keys.map((id) =>\n        <Tab.Pane eventKey={\"#\"+id.toString()} key={id.toString()}>\n          <TVShow show={this.props.table.data[id]}/>\n        </Tab.Pane>)}\n      </Tab.Content>);\n  }\n}\nclass TVShowList extends Component {\n  render(){\n    if (this.props.list){\n      return (\n        <ListGroup>{this.props.list.map((id) =>\n          <ListGroup.Item key={id.toString()} action\n                          href={\"#\"+id.toString()}>\n            <TVShowMini show={this.props.table.data[id]}>\n              <Button variant=\"secondary\"\n                onClick={()=>this.props.onClick(id)}\n                size=\"lg\">\n                {this.props.textButton}\n              </Button>\n            </TVShowMini>\n          </ListGroup.Item>)}\n        </ListGroup>)\n    } else {\n      return (<div>Pas de résultat</div>);\n    }\n  }\n}\n\nclass TVShowQuery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {found: null, selection: []};\n    this.textInput = React.createRef();\n\n    this.serie =  new Table(\"serie\");\n    this.serie.addField(new Field(\"id\",\"int(11) NOT NULL\",\"id\"));\n    this.serie.addField(new Field(\"nom\",\"varchar(255) NOT NULL\",\"name\"));\n    this.serie.addField(new Field(\"resume\",\"text\",\"summary\"));\n    this.serie.addField(new Field(\"langue\",\"varchar(255)\",\"language\"));\n    this.serie.addField(new Field(\"note\",\"decimal(4,2)\",\"rating.average\"));\n    this.serie.addField(new Field(\"statut\",\"varchar(64)\",\"status\"));\n    this.serie.addField(new Field(\"premiere\",\"date\",\"premiered\"));\n    this.serie.addField(new Field(\"url\",\"varchar(255)\",\"url\"));\n    this.serie.addField(new Field(\"urlImage\",\"varchar(255)\",\"image.medium\"));\n\n    this.personnage = new Table(\"personnage\");\n    this.personnage.addField(new Field(\"id\",\"int(11) NOT NULL\",\"id\"));\n    this.personnage.addField(new Field(\"nom\",\"varchar(255) NOT NULL\",\"name\"));\n    this.personnage.addField(new Field(\"urlImage\",\"varchar(255)\",\"image.medium\"));\n\n    this.personne = new Table(\"personne\");\n    this.personne.addField(new Field(\"id\",\"int(11) NOT NULL\",\"id\"));\n    this.personne.addField(new Field(\"nom\",\"varchar(255) NOT NULL\",\"name\"));\n    this.personne.addField(new Field(\"urlImage\",\"varchar(255)\",\"image.medium\"));\n    this.personne.addField(new Field(\"url\",\"varchar(255)\",\"url\"));\n    this.personne.addField(new Field(\"naissance\",\"date\",\"birthday\"));\n    this.personne.addField(new Field(\"mort\",\"date\",\"deathday\"));\n    this.personne.addField(new Field(\"pays\",\"varchar(255)\",\"country.name\"));\n\n    this.jouer = new Table(\"jouer\");\n    this.jouer.addField(new Field(\"idSerie\",\"int(11) NOT NULL\",\"idSerie\"));\n    this.jouer.addField(new Field(\"idPersonnage\",\"int(11) NOT NULL\",\"idPersonnage\"));\n    this.jouer.addField(new Field(\"idPersonne\",\"int(11) NOT NULL\",\"idPersonne\"));\n    this.jouer.setKey(\"`idSerie`,`idPersonnage`,`idPersonne`\");\n\n    this.episode = new Table(\"episode\");\n    this.episode.addField(new Field(\"id\",\"int(11) NOT NULL\",\"id\"));\n    this.episode.addField(new Field(\"nom\",\"varchar(255) NOT NULL\",\"name\"));\n    this.episode.addField(new Field(\"idSerie\",\"int(11) NOT NULL\",\"idSerie\"));\n    this.episode.addField(new Field(\"resume\",\"text\",\"summary\"));\n    this.episode.addField(new Field(\"numero\",\"int(11)\",\"number\"));\n    this.episode.addField(new Field(\"saison\",\"int(11)\",\"season\"));\n    this.episode.addField(new Field(\"premiere\",\"date\",\"airdate\"));\n    this.episode.addField(new Field(\"urlImage\",\"varchar(255)\",\"image.medium\"));\n    this.episode.addField(new Field(\"url\",\"varchar(255)\",\"url\"));\n\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRemoveShow = this.handleRemoveShow.bind(this);\n    this.handleAddShow = this.handleAddShow.bind(this);\n    this.downloadSQLFile = this.downloadSQLFile.bind(this);\n  }\n\n  handleSubmit(event) {\n    const query = this.textInput.current.value;\n\n    fetch(`https://api.tvmaze.com/search/shows?q=`+query)\n      .then(result=>result.json())\n      .then((result)=>{\n        for(let line in result) {\n          this.serie.add(result[line].show);\n        }\n        this.setState({found : result.map(line=>line.show.id)});\n      });\n    event.preventDefault();\n  }\n\n  handleRemoveShow(id) {\n    this.setState({selection: this.state.selection.filter((elt) => (elt !== id))});\n  }\n\n  handleAddShow(id) {\n//    const id = show.id;\n    fetch(`https://api.tvmaze.com/shows/`+id+`?embed[]=cast&embed[]=episodes`)\n      .then(result=>result.json())\n      .then((result)=>{\n        //console.log(result);\n        const cast = result._embedded.cast;\n        for(let i = 0; i< cast.length;++i){\n          this.personne.add(cast[i].person);\n          this.personnage.add(cast[i].character);\n\n          const personneId = cast[i].person.id;\n          const personnageId = cast[i].character.id;\n          this.jouer.add({id:id+\"/\"+personneId+\"/\"+personnageId,\n            idSerie:id,\n            idPersonnage:personnageId,\n            idPersonne:personneId});\n        }\n        const episodes = result._embedded.episodes;\n        for(let i = 0; i< episodes.length;++i){\n          episodes[i].idSerie = id;\n          this.episode.add(episodes[i]);\n        }\n        this.setState((oldState) => { return {\n                      selection: [id].concat(oldState.selection),\n                      found: oldState.found.filter((elt) => (elt !== id))\n                    }});\n      });\n  }\n\n  downloadSQLFile() {\n\n    var result = \"# Fichier généré avec les données de TVmaze, en CC-BY-SA. https://www.tvmaze.com/api \\n\";\n    result +=\"# Liste des séries incluses, par id :\\n\";\n    result +=\"# \"+this.state.selection.join(\",\")+\"\\n\\n\\n\";\n\n    result+=this.serie.generateCreateStatement();\n    result+=this.personne.generateCreateStatement();\n    result+=this.personnage.generateCreateStatement();\n    result+=this.jouer.generateCreateStatement();\n    result+=this.episode.generateCreateStatement();\n\n    result+=this.serie.generateAllInsert(this.state.selection);\n    result+=this.personne.generateAllInsert();\n    result+=this.personnage.generateAllInsert();\n    result+=this.jouer.generateAllInsert();\n    result+=this.episode.generateAllInsert();\n\n\n    console.log(result);\n\n      const element = document.createElement(\"a\");\n      const file = new Blob([result], {type: 'text/plain'});\n      element.href = URL.createObjectURL(file);\n      element.download = \"tvshows.sql\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n      element.click();\n    }\n\n  render() {\n    return (\n  <Tab.Container>\n\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">\n    <img src={logo} width=\"45\" height=\"45\" className=\"d-inline-block align-top\"\n          alt=\"Serie2SQL\"/>\n    </Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"https://www.tvmaze.com/api\">Données : TVMaze API</Nav.Link>\n      <Button variant=\"outline-info\" disabled={this.state.selection.length === 0}\n        onClick={this.downloadSQLFile}>\n        Exporter la sélection en SQL\n        </Button>\n    </Nav>\n    <Form inline onSubmit={this.handleSubmit}>\n      <FormControl type=\"text\" placeholder=\"Nom de la série\" className=\"mr-sm-2\"\n        ref={this.textInput}\n        autoFocus={true} />\n      <Button variant=\"outline-info\" type=\"submit\">Rechercher</Button>\n    </Form>\n  </Navbar>\n  <div style={{marginTop:\"1em\"}} />\n  <Row>\n    <Col sm={4}>\n      <h4>Sélection <Badge pill variant=\"info\">{this.state.selection.length} séries</Badge></h4>\n      <TVShowList list={this.state.selection} table={this.serie} onClick={this.handleRemoveShow}\n                  textButton=\"Retirer\"/>\n    </Col>\n    <Col sm={4}>\n      <h4>Résultats de recherche</h4>\n      <TVShowList list={this.state.found} table={this.serie} onClick={this.handleAddShow}\n                  textButton=\"Ajouter\"/>\n    </Col>\n    <Col sm={4}>\n      <h4>Détail de la sélection</h4>\n      <TVShowSelected table={this.serie}/>\n    </Col>\n  </Row>\n  </Tab.Container>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TVShowQuery />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}